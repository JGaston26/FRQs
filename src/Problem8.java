public class Problem8 {

    static double[][] distances = {
            {0.0, 5693.138, 7741.543, 3175.054, 1864.427, 8265.734, 6394.208},
            {5693.139, 0.0, 6750.348, 2565.216, 6054.447, 5715.394, 6629.131},
            {7741.543, 6750.348, 0.0, 6831.922, 7718.037, 10228.791, 4437.237},
            {3175.053, 2565.216, 6831.922, 0.0, 3904.078, 6052.128, 6224.888},
            {1864.426, 6054.447, 7718.037, 3904.077, 0.0, 9673.800, 5314.651},
            {8265.733, 5715.394, 10228.791, 6052.128, 9673.800, 0.0, 11635.789},
            {6394.208, 6629.131, 4437.237, 6224.888, 5314.651, 11635.789, 0.0}
    };

    static int[][] paths = {
            {1, 5, 2, 3, 7, 4, 6},
            {1, 5, 2, 6, 4, 3, 7},
            {1, 5, 2, 6, 4, 7, 3},
            {1, 5, 2, 7, 3, 4, 6},
            {1, 5, 3, 2, 6, 4, 7},
            {1, 5, 3, 2, 7, 4, 6},
            {1, 5, 3, 4, 6, 2, 7},
            {1, 5, 3, 4, 7, 2, 6},
            {1, 5, 3, 7, 2, 4, 6},
            {1, 5, 3, 7, 2, 6, 4},
            {1, 5, 3, 7, 4, 2, 6},
            {1, 5, 3, 7, 4, 6, 2},
            {1, 5, 4, 3, 7, 2, 6},
            {1, 5, 4, 6, 2, 3, 7},
            {1, 5, 4, 6, 2, 7, 3},
            {1, 5, 4, 7, 3, 2, 6},
            {1, 5, 6, 2, 3, 4, 7},
            {1, 5, 6, 2, 3, 7, 4},
            {1, 5, 6, 2, 4, 3, 7},
            {1, 5, 6, 2, 4, 7, 3},
            {1, 5, 6, 2, 7, 3, 4},
            {1, 5, 6, 2, 7, 4, 3},
            {1, 5, 6, 4, 2, 3, 7},
            {1, 5, 6, 4, 2, 7, 3},
            {1, 5, 6, 4, 3, 2, 7},
            {1, 5, 6, 4, 3, 7, 2},
            {1, 5, 6, 4, 7, 2, 3},
            {1, 5, 6, 4, 7, 3, 2},
            {1, 5, 7, 2, 3, 4, 6},
            {1, 5, 7, 2, 6, 4, 3},
            {1, 5, 7, 3, 2, 4, 6},
            {1, 5, 7, 3, 2, 6, 4},
            {1, 5, 7, 3, 4, 2, 6},
            {1, 5, 7, 3, 4, 6, 2},
            {1, 5, 7, 4, 3, 2, 6},
            {1, 5, 7, 4, 6, 2, 3}
    };

    public static void main(String[] args) {
        for (int[] path : paths) {
            double distance = calculateDistance(path);
            System.out.println("Path: " + java.util.Arrays.toString(path) + ", Total Distance: " + distance);
        }
    }

    public static double calculateDistance(int[] path) {
        double totalDistance = 0;
        for (int i = 0; i < path.length - 1; i++) {
            int start = path[i] - 1;
            int end = path[i + 1] - 1;
            totalDistance += distances[start][end];
        }
        return totalDistance;
    }
}